package main

import "testing"

var testcases = []struct{
	s1 string;
	s2 string;
	n int64;
	out string
}{
	{"1", "01", 2, "101"},
	{"1415926535",
	 "8979323846",
	 10,
	},
	/*
	{"1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679",
		"8214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196",
		104683731294243150, ""},
	*/
}

func TestFibbonacciWords(t *testing.T){
	t.Parallel()

	for _, c := range testcases {
		out := fibbonacciWord(c.s1, c.s2, c.n)

		if out != c.out {
			t.Errorf("Fail!!!: we were expecting %v for the (%v, %v, %v) input", c.out, c.s1, c.s2, c.n)
		} else {
			t.Logf("Success!!!: we were expecting %v for the (%v, %v, %v) input, and that's what we actually received!", c.out, c.s1, c.s2, c.n)
		}
	}
}

func BenchmarkFibbonacciWords(b *testing.B) {
	println(b.N)
	for i := 0; i < b.N; i++ {
		for _, c := range testcases {
			fibbonacciWord(c.s1, c.s2, c.n)
		}
	}
}